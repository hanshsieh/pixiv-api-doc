openapi: 3.0.3
info:
  title: Pixiv API
  description: |
    This document is the unofficial API doc of [Pixiv](https://www.pixiv.net/)
    API.
    Internally, Pixiv has a RESTful API, which is used by its mobile apps.
    However, the APIs aren't officially public, and there's no official document
    for the APIs. This document attempts to complement it.
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
  - url: https://app-api.pixiv.net
    description: The API server.
security:
  - bearer: []
paths:
  "/auth/token":
    post:
      servers:
        - url: https://oauth.secure.pixiv.net
          description: The authentication server.
      tags:
        - auth
      summary: Create a new authentication token
      description: |
        Do authentication, and obtain an access token and refresh token that can be used to access other APIs.
        There're a few grant types to do the authentication:
        - `password`: Authenticate with username and password. Initially, a client should authenticate
          with grant type `password` to obtain a access token and a refresh token. Then before the
          access token expires, the client should use grant type `refresh_token` to get a new access
          token.
        - `refresh_token`: Authenticate with a refresh token.
      operationId: getAuthToken
      parameters:
        - name: "User-Agent"
          in: header
          schema:
            type: string
          required: true
          examples:
            android:
              value: "PixivAndroidApp/5.0.64 (Android 6.0)"
            ios:
              value: "PixivIOSApp/7.6.2 (iOS 12.0.1; iPhone8,2)"
        - name: "X-Client-Time"
          in: header
          schema:
            type: string
            format: date-time
          required: true
          description: |
            Current time in ISO 8601 format. The timezone must be UTC, and must use `Z` instead of `+00:00`. The seconds
            mustn't contain fractional part.
          example: "2020-08-01T23:13:00Z"
        - name: "X-Client-Hash"
          in: header
          required: true
          example: "3aa8bb04754d6b260572822d2b8d9adf"
          schema:
            type: string
          description: |
            The value of `toHex(md5(<value of X-Client-Time> || <hash_secret>))`. The hex string must use lower case
            letters.
            The hash secret is `28c1fdd170a5204386cb1313c7077b34f83e4aaf4aa829ce78c231e05b0bae2c`.
      security: []
      requestBody:
        description: Authentication parameters
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthTokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthTokenCreate'
        required: true
      responses:
        200:
          description: Successfully get the tokens.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResult'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
  "/v2/user/browsing-history/illust/add":
    post:
      tags:
        - user
      summary: Add illustration to browsing history
      description: |
        Add illustrations to the browsing history of the current user.
      operationId: addIllustsToBrowsingHistory
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                illust_ids[]:
                  type: array
                  items:
                    $ref: '#/components/schemas/IllustId'
            encoding:
              illust_ids[]:
                style: form
                explode: true
      responses:
        200:
          description: |
            Successfully added the illustrations to the browsing history.
            The response is an empty JSON object.
          content:
            application/json:
              schema:
                type: object
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  "/v2/illust/bookmark/add":
    post:
      tags:
        - user
      summary: Add illustration to the users's bookmark
      description: |
        Add an illustration to the users's bookmark.
      operationId: addIllustToBookmark
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                illust_id:
                  $ref: '#/components/schemas/IllustId'
                restrict:
                  type: string
                  enum:
                    - public
              required:
                - illust_id
                - restrict
      responses:
        200:
          description: |
            Successfully added the illustration to the bookmark.
            The response is an empty JSON object.
          content:
            application/json:
              schema:
                type: object
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  "/v2/illust/related":
    get:
      tags:
        - illustration
      summary: Gets the related illustrations
      description: |
        Gets the illustrations related to a given illustration.
      operationId: getRelatedIllusts
      parameters:
        - name: filter
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/IllustFilter'
          description: |
            The filter for different mobile platforms.
        - name: illust_id
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/IllustId'
          description: |
            Illustration ID.
        - name: seed_illust_ids[0]
          in: query
          schema:
            $ref: '#/components/schemas/IllustId'
          required: false
          description: |
            TODO What does it mean?
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: |
            The offset of the illustrations to query. Starting from 0.
      responses:
        200:
          description: Successfully get the illustrations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedIllustrations'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  "/v1/illust/ranking":
    get:
      tags:
        - illustration
      summary: Returns the ranking of illustrations
      description: |
        It gets the raking of illustrations.
        A filter can be used for filtering the illustrations, and control which kind of
        ranking should be used.
        Login is required.
      operationId: getRankedIllusts
      parameters:
        - name: filter
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/IllustFilter'
          description: |
            The filter for different mobile platforms.
            TODO: What's the default?
        - name: mode
          in: query
          required: false
          schema:
            type: string
            enum:
              - day
              - day_male
              - day_female
              - week_original
              - week_rookie
              - month_rookie
              - week
              - month
              - day_r18
              - week_r18
              - week_r18g
              - day_male_r18
              - day_female_r18
              - day_manga
              - week_manga
              - month_manga
          description: |
            Mode of the ranking.
            TODO What's the default?
        - name: date
          in: query
          schema:
            type: string
            pattern: \d{4}-\d{2}-\d{2}
          required: false
          example: "2020-01-01"
          description: |
            This parameter can be used to query the ranking in the past.
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: |
            The offset of the illustrations to query. Starting from 0.
      responses:
        200:
          description: Successfully get the illustrations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RankingIllustrations'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  "/v1/illust/recommended":
    get:
      tags:
        - illustration
      summary: Returns the recommended illustrations based on the logged in user's preference
      description: |
        It returns the recommended illustrations based on the logged in user's preference.
        It needs login.
        There's another API for getting recommended illustrations for not logged-in users.
      operationId: getRecommendedIllusts
      parameters:
        - name: filter
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/IllustFilter'
          description: |
            The filter for different mobile platforms.
            TODO: What's the default?
        - name: min_bookmark_id_for_recent_illust
          in: query
          required: false
          schema:
            type: string
          description: |
            **TODO**
        - name: max_bookmark_id_for_recommend
          in: query
          required: false
          schema:
            type: string
          description: |
            **TODO**
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: |
            The offset of the illustrations to query. Starting from 0.
        - name: include_ranking_illusts
          in: query
          schema:
            type: boolean
          description: |
            It indicates that whether the illustration ranking should also be included
            in the result.
            Notice that even if it's set to `true`, the `next_url` in the response will still
            set it to false.
        - name: include_privacy_policy
          in: query
          schema:
            type: boolean
          description: |
            It indicates that whether the privacy policy info should also be included
            in the result.
            Notice that even if it's set to true, the `next_url` in the response will still
            set it to false.
      responses:
        200:
          description: Successfully get the illustrations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedIllusts'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  "/v1/illust/detail":
    get:
      tags:
        - illustration
      summary: Returns the details of an illustration
      description: |
        It returns the details of an illustration.
        It needs login.
      operationId: getIllustDetail
      parameters:
        - name: illust_id
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/IllustId"
      responses:
        200:
          description: Successfully get the illustrations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllustrationDetail'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  "/v1/search/illust":
    get:
      tags:
        - illustration
      summary: Searches illustrations
      description: |
        It searches illustrations using keywords.
      operationId: searchIllusts
      parameters:
        - name: filter
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/IllustFilter'
          description: |
            The filter for different mobile platforms.
            TODO: What's the default?
        - name: include_translated_tag_results
          in: query
          required: false
          schema:
            default: true
            type: boolean
          description: |
            Whether to include the search result for the translated
            keywords.
        - name: merge_plain_keyword_results
          in: query
          required: false
          schema:
            default: true
            type: boolean
          description: |
            Whether to include the search result of merging the provided
            keywords.
        - name: word
          in: query
          required: true
          schema:
            type: string
          example: "巫女 SAO"
          description: |
            The keywords to search. It may contain several words separated
            by spaces.
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum:
              - date_asc
              - date_desc
          description: |
            The sorting criteria.
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: |
            The offset of the illustrations to query. Starting from 0.
        - name: search_target
          in: query
          schema:
            type: string
            enum:
              - partial_match_for_tags
          description: |
            The target to search.
            - `partial_match_for_tags`: Partial matching for the tags.
      responses:
        200:
          description: Successfully get the illustrations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedIllusts'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  "/v1/user/illusts":
    get:
      tags:
        - illustration
      summary: Gets the illustrations of a user
      description: |
        Gets the illustrations of a user.
      operationId: getUserIllusts
      parameters:
        - name: filter
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/IllustFilter'
          description: |
            The filter for different mobile platforms.
        - name: user_id
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/UserId'
          description: |
            Illustration ID.
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/IllustType'
          required: true
          description: |
            Type of the illustration.
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: |
            The offset of the illustrations to query. Starting from 0.
      responses:
        200:
          description: Successfully get the illustrations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIllustrations'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  "/v2/illust/comments":
    get:
      tags:
        - comment
      summary: Gets the comments of an illustration
      description: |
        Gets the comments of an illustration.
        The returned comments are sorted by the creation time from the newest
        to the oldest.
      operationId: getIllustComments
      parameters:
        - name: illust_id
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/IllustId'
          description: |
            Illustration ID.
            It can be the ID of an illustration, manga, or novel.
        - name: last_comment_id
          in: query
          schema:
            $ref: '#/components/schemas/CommentId'
          description: |
            The last comment ID to start the query. Normally, it should be the
            ID of the last comment of the last query result.
      responses:
        200:
          description: Successfully get the comments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllustComments'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  "/v1/illust/comment/replies":
    get:
      tags:
        - comment
      summary: Gets the replies of a comment
      description: |
        Gets the replied comments of a comment.
        The returned replies are sorted by the creation time from the newest
        to the oldest.
      operationId: getCommentReplies
      parameters:
        - name: comment_id
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/CommentId'
          description: |
            Illustration ID.
        - name: last_comment_id
          in: query
          schema:
            $ref: '#/components/schemas/CommentId'
          description: |
            The last comment ID to start the query. Normally, it should be the
            ID of the last comment of the last query result.
      responses:
        200:
          description: Successfully get the comments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllustComments'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  "/v1/manga/recommended":
    get:
      tags:
        - manga
      summary: Returns the recommended mangas based on the logged in user's preference
      description: |
        It returns the recommended mangas based on the logged in user's preference.
      operationId: getRecommendedMangas
      parameters:
        - name: filter
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/IllustFilter'
          description: |
            The filter for different mobile platforms.
        - name: max_bookmark_id
          in: query
          required: false
          schema:
            type: string
            example: 6637022485
          description: |
            The ID of the bookmark to query the next page. The value can be
            obtained from the `next_url` of the last response.
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: |
            The offset of the illustrations to query. Starting from 0.
        - name: include_ranking_illusts
          in: query
          schema:
            type: boolean
          description: |
            It indicates that whether the illustration ranking should also be included
            in the result.
            This is usually set to true for the first page, and false for the following
            pages, so that both the first page of ranking and recommended illustrations
            can be obtained in a single request.
            Notice that even if it's set to `true`, the `next_url` in the response will still
            set it to false.
        - name: include_privacy_policy
          in: query
          schema:
            type: boolean
          description: |
            It indicates that whether the privacy policy info should also be included
            in the result.
            Notice that even if it's set to true, the `next_url` in the response will still
            set it to false.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedMangas'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  "/v1/novel/recommended":
    get:
      tags:
        - novel
      summary: Returns the recommended novels based on the logged in user's preference
      description: |
        It returns the recommended novels based on the logged in user's preference.
      operationId: getRecommendedNovels
      parameters:
        - name: max_bookmark_id
          in: query
          required: false
          schema:
            type: string
            example: 6637022485
          description: |
            The ID of the bookmark to query the next page. The value can be
            obtained from the `next_url` of the last response.
        - name: include_ranking_novels
          in: query
          schema:
            type: boolean
          description: |
            It indicates that whether the novel ranking should also be included
            in the result.
            This is usually set to true for the first page, and false for the following
            pages, so that both the first page of ranking and recommended novels
            can be obtained in a single request.
            Notice that even if it's set to `true`, the `next_url` in the response will still
            set it to false.
        - name: include_privacy_policy
          in: query
          schema:
            type: boolean
          description: |
            It indicates that whether the privacy policy info should also be included
            in the result.
            Notice that even if it's set to true, the `next_url` in the response will still
            set it to false.
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: |
            The offset of the illustrations to query. Starting from 0.
        - name: already_recommended
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/IllustId'
          style: form
          explode: false
          description: |
            List of manga IDs that should be excluded from the result.
            This is usually set to all the IDs of the previous pages.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedNovels'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
components:
  securitySchemes:
    bearer:
      type: http
      scheme: Bearer
  schemas:
    AuthTokenCreate:
      required:
        - client_id
        - client_secret
        - grant_type
      type: object
      properties:
        client_id:
          type: string
          description: |
            ID of the client for OAuth authentication. Use `MOBrBDS8blbauoSck0ZfDbtuzpyT`
            to act as the mobile app.
          example: MOBrBDS8blbauoSck0ZfDbtuzpyT
        client_secret:
          type: string
          description: |
            Client secret for OAuth authentication. Use `lsACyCD94FhDUtGTXi3QzcFE2uU1hqtDaKeqrdwj`
            to act as the mobile app.
          example: lsACyCD94FhDUtGTXi3QzcFE2uU1hqtDaKeqrdwj
        grant_type:
          type: string
          description: |
            The way of authentication to use.
          example: password
          enum:
            - refresh_token
            - authorization_code
        refresh_token:
          type: string
          description: |
            The token used to get a new access token.
            This property is required when the `grant_type` is `refresh_token`.
        code:
          type: string
          description: |
            Authorization code.
            This property is required when the `grant_type` is
            `authorization_code`.
        code_verifier:
          type: string
          description: |
            The code verifier of the corresponding code challenge used to
            obtain the authorization code.
            This is part of the PKCE specification. See RFC 7636 for
            the details.
            This property is required when `grant_type`
            is `authorization_code`.
        redirect_uri:
          type: string
          description:
            The redirect URI used to obtain the authorization code.
            This property is required when `grant_type` is
            `authorization_code` and its value should be `https://app-api.pixiv.net/web/v1/users/auth/pixiv/callback`.
        include_policy:
          type: boolean
          description: |
            It looks like it doesn't have actual effect.
            This property is used (optional) when `grant_type` is
            `authorization_code`.
    AuthResult:
      type: object
      properties:
        access_token:
          type: string
          description: |
            The issued access token that can be used to access other APIs.
        expires_in:
          type: integer
          description: |
            The number of seconds from now that the access token will expire.
        token_type:
          type: string
          example: "bearer"
        scope:
          type: string
          example: ""
        refresh_token:
          type: string
          description: |
            The token that can be used to get a refreshed access token within expiry time without doing
            the authentication again.
        user:
          $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        profile_image_urls:
          $ref: '#/components/schemas/ProfileImageUrls'
        id:
          $ref: '#/components/schemas/UserId'
        name:
          type: string
          description: |
            The name of the user.
        account:
          type: string
          description: |
            The account name used for log in.
        mail_address:
          type: string
          example: "test@example.com"
          description: |
            Email address of the user.
        is_premium:
          type: boolean
          description: |
            Whether the user has bought the premimum subscription.
        x_restrict:
          type: integer
        is_mail_authorized:
          type: boolean
          description: |
            Whether the email of the user has been validated.
    ProfileImageUrls:
      type: object
      description: |
        User's profile image URLs.
        If the user doesn't set a profile image, URLs to a default image will be used.
      properties:
        px_16x16:
          type: string
          format: uri
          description: URL to the user's profile image in 16x16 pixels.
        px_50x50:
          type: string
          format: uri
          description: URL to the user's profile image in 50x50 pixels.
        px_170x170:
          type: string
          format: uri
          description: URL to the user's profile image in 170x170 pixels.
    UserIllustrations:
      type: object
      properties:
        illusts:
          type: array
          items:
            $ref: '#/components/schemas/Illustration'
        next_url:
          type: string
          description: |
            The next URL that can be used for querying the next page, if any.
          example: "https://app-api.pixiv.net/v1/user/illusts?filter=for_android&user_id=7140895&type=illust&offset=30"
      required:
        - illusts
    RelatedIllustrations:
      type: object
      properties:
        illusts:
          type: array
          items:
            $ref: '#/components/schemas/Illustration'
        next_url:
          type: string
          description: |
            The next URL that can be used for querying the next page, if any.
          example: "https://app-api.pixiv.net/v2/illust/related?filter=for_android&illust_id=83580495&seed_illust_ids%5B0%5D=83580495&offset=60"
      required:
        - illusts
    RankingIllustrations:
      type: object
      properties:
        illusts:
          type: array
          items:
            $ref: '#/components/schemas/Illustration'
        next_url:
          type: string
          description: |
            The next URL that can be used for querying the next page, if any.
          example: "https://app-api.pixiv.net/v1/illust/ranking?filter=for_android&mode=day&offset=30"
      required:
        - illusts
    UserId:
      type: string
      description:
        Internal numerical user ID.
      example: "123456789"
    IllustId:
      type: integer
      format: int64
      description: |
        Illustration ID.
      example: 83314745
    CommentId:
      type: integer
      format: int64
      description: |
        Comment ID.
      example: 113765733
    IllustType:
      type: string
      enum:
        - illust
        - ugoira
        - manga
    Illustration:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/IllustId"
        title:
          type: string
          example: "アリス・シンセシス・サーティ/cap"
        type:
          $ref: '#/components/schemas/IllustType'
        image_urls:
          $ref: '#/components/schemas/IllustImageURLs'
        caption:
          type: string
          example: "何気に商人だけのサムネって初めてでは？"
        restrict:
          type: integer
        user:
          $ref: '#/components/schemas/Author'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        tools:
          type: array
          items:
            type: string
            description: The tools used for creating the illustration.
            example: "CLIP STUDIO PAINT"
        create_date:
          type: string
          format: date-time
        page_count:
          type: integer
          description: Total number of pages for the illustration.
        width:
          type: integer
          example: 1240
        height:
          type: integer
          example: 2089
        sanity_level:
          type: integer
        x_restrict:
          type: integer
        series:
          $ref: '#/components/schemas/Series'
        meta_single_page:
          $ref: '#/components/schemas/MetaSinglePage'
        meta_pages:
          type: array
          items:
            $ref: '#/components/schemas/MetaPage'
        total_view:
          type: integer
          example: 14224
        total_bookmarks:
          type: integer
          example: 287
        is_bookmarked:
          type: boolean
          example: false
        visible:
          type: boolean
          example: true
        is_muted:
          type: boolean
          example: false
    MetaPage:
      type: object
      description: |
        It contains the information of one of the multiple pages of an illustration.
      properties:
        image_urls:
          $ref: '#/components/schemas/MetaPageImageURLs'
    MetaPageImageURLs:
      type: object
      description: contains the image URLs of a meta page.
      properties:
        square_medium:
          type: string
          example: "https://i.pximg.net/c/360x360_70/img-master/img/2020/07/31/19/34/58/83348083_p0_square1200.jpg"
        medium:
          type: string
          example: "https://i.pximg.net/c/540x540_70/img-master/img/2020/07/31/19/34/58/83348083_p0_master1200.jpg"
        large:
          type: string
          example: "https://i.pximg.net/c/600x1200_90/img-master/img/2020/07/31/19/34/58/83348083_p0_master1200.jpg"
        original:
          type: string
          example: "https://i.pximg.net/img-original/img/2020/07/31/19/34/58/83348083_p0.jpg"
    MetaSinglePage:
      type: object
      description: |
        It contains the image URLs when the illustration contain only a single image.
      properties:
        original_image_url:
          type: string
          description: The URL to the original size of the illustration.
          example: "https://i.pximg.net/img-original/img/2020/07/30/00/26/33/83314745_p0.png"
    Series:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
    Tag:
      type: object
      properties:
        name:
          type: string
          example: "Fate/GrandOrder"
        translated_name:
          type: string
      required:
        - name
    NovelTag:
      type: object
      properties:
        name:
          type: string
          example: "Fate/GrandOrder"
        translated_name:
          type: string
        added_by_uploaded_user:
          type: boolean
      required:
        - name
    IllustImageURLs:
      type: object
      properties:
        square_medium:
          type: string
          example: "https://i.pximg.net/c/360x360_70/img-master/img/2020/07/30/00/26/33/83314745_p0_square1200.jpg"
        medium:
          type: string
          example:  "https://i.pximg.net/c/540x540_70/img-master/img/2020/07/30/00/26/33/83314745_p0_master1200.jpg"
        large:
          type: string
          example: "https://i.pximg.net/c/600x1200_90/img-master/img/2020/07/30/00/26/33/83314745_p0_master1200.jpg"
    AuthorImageUrls:
      type: object
      properties:
        medium:
          type: string
          example: "https://i.pximg.net/user-profile/img/2020/02/03/16/33/15/17853306_774cadacc6003ba8aa04ea1b754e8755_170.jpg"
    Author:
      type: object
      properties:
        id:
          type: integer
          format: int64
        profile_image_urls:
          $ref: '#/components/schemas/AuthorImageUrls'
        name:
          type: string
        account:
          type: string
          description: Account name.
        is_followed:
          type: boolean
    IllustFilter:
      type: string
      enum:
        - for_ios
        - for_android
    RecommendedIllusts:
      type: object
      properties:
        illusts:
          type: array
          items:
            $ref: '#/components/schemas/Illustration'
        ranking_illusts:
          type: array
          items:
            $ref: '#/components/schemas/Illustration'
        contest_exists:
          type: boolean
        privacy_policy:
          $ref: '#/components/schemas/PrivacyPolicy'
        next_url:
          type: string
          description: |
            The next URL that can be used for querying the next page, if any.
          example: "https://app-api.pixiv.net/v1/illust/ranking?filter=for_android&mode=day&offset=30"
      required:
        - illusts
    IllustComments:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/IllustComment'
        next_url:
          type: string
          description: |
            The next URL that can be used for querying the next page, if any.
          example: "https://app-api.pixiv.net/v2/illust/comments?illust_id=66119493&last_comment_id=73593607"
      required:
        - comments
    RecommendedMangas:
      type: object
      properties:
        illusts:
          type: array
          items:
            $ref: '#/components/schemas/Illustration'
        ranking_illusts:
          type: array
          items:
            $ref: '#/components/schemas/Illustration'
        privacy_policy:
          $ref: '#/components/schemas/PrivacyPolicy'
        next_url:
          type: string
          description: |
            The next URL that can be used for querying the next page, if any.
          example: "https://app-api.pixiv.net/v1/manga/recommended?filter=for_android&include_ranking_illusts=false&include_privacy_policy=false&max_bookmark_id=2898490773&offset=60"
      required:
        - illusts
    RecommendedNovels:
      type: object
      properties:
        novels:
          type: array
          items:
            $ref: '#/components/schemas/Novel'
        ranking_novels:
          type: array
          items:
            $ref: '#/components/schemas/Novel'
        privacy_policy:
          $ref: '#/components/schemas/PrivacyPolicy'
        next_url:
          type: string
          description: |
            The next URL that can be used for querying the next page, if any.
          example: "https://app-api.pixiv.net/v1/novel/recommended?include_ranking_novels=false&include_privacy_policy=false&offset=15&already_recommended=14246258%2C14244406%2C14243790%2C14247365%2C14243138%2C14243307%2C14243958%2C14252191%2C14244697%2C14249809%2C14244181%2C14245453%2C12489004%2C14249410%2C14245509"
      required:
        - illusts
    Novel:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/IllustId"
        title:
          type: string
          example: "アリス・シンセシス・サーティ/cap"
        caption:
          type: string
          example: "何気に商人だけのサムネって初めてでは？"
        restrict:
          type: integer
          example: 0
        x_restrict:
          type: integer
          example: 0
        is_original:
          type: boolean
        image_urls:
          $ref: '#/components/schemas/IllustImageURLs'
        create_date:
          type: string
          format: date-time
          example: "2020-12-11T16:23:04+09:00"
        tags:
          type: array
          items:
            $ref: '#/components/schemas/NovelTag'
        page_count:
          type: integer
          example: 6
        text_length:
          type: integer
          example: 22683
        user:
          $ref: '#/components/schemas/Author'
        series:
          $ref: '#/components/schemas/Series'
        is_bookmarked:
          type: boolean
        total_bookmarks:
          type: integer
          example: 2894
        total_view:
          type: integer
          example: 40319
        visible:
          type: boolean
        total_comments:
          type: integer
          example: 115
        is_muted:
          type: boolean
        is_mypixiv_only:
          type: boolean
          example: false
        is_x_restricted:
          type: boolean
    IllustComment:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CommentId'
        comment:
          type: string
          description: |
            Content of the comment.
            It can contain special strings like `(happy3)` and `(heart)`
            to indicate a built-in icon.
          example: 好评！！！！ (happy3)
        date:
          type: string
          format: date-time
          example: "2015-08-09T07:27:56+09:00"
        has_replies:
          type: boolean
          description: |
            Whether the comment has replies.
        user:
          type: object
          description: |
            The user who created the comment.
          properties:
            profile_image_urls:
              $ref: '#/components/schemas/AuthorImageUrls'
            id:
              $ref: '#/components/schemas/UserId'
            name:
              type: string
              description: |
                The name of the user.
              example: Kureiji :3
            account:
              type: string
              description: |
                The account name used for log in.
              example: slim_shadythe11
    PrivacyPolicy:
      type: object
      properties:
        version:
          type: string
          example: "2-en"
        message:
          type: string
          example: pixiv has updated the Privacy Policy as from March 30, 2020.
        url:
          type: string
          example: https://www.pixiv.net/terms/?page=new_privacy&appname=pixiv_ios
    IllustrationDetail:
      type: object
      properties:
        illust:
          $ref: "#/components/schemas/Illustration"
      required:
        - illust
    AuthError:
      type: object
      properties:
        has_error:
          type: boolean
          example: true
        errors:
          $ref: '#/components/schemas/AuthErrorDetails'
        error:
          type: string
          example: "invalid_grant"
    AuthErrorDetails:
      type: object
      properties:
        system:
          type: object
          properties:
            message:
              type: string
              example: Invalid grant_type parameter or parameter missing
            code:
              type: integer
              example: 1508
      description: Details of the error. The keys will be the category of the error.
    APIError:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/APIErrorDetails'
    APIErrorDetails:
      type: object
      properties:
        user_message:
          type: string
        message:
          type: string
        reason:
          type: string
        user_message_details:
          type: object
          description: |
            Details of the error. The schema depends on the error type.
