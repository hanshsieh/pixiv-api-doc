openapi: 3.0.1
info:
  title: Pixiv API
  description: |
    This document is the unofficial API doc of [Pixiv](https://www.pixiv.net/)
    API.   
    Internally, Pixiv has a RESTful API, which is used by its mobile apps.
    However, the APIs aren't officially public, and there's no official document
    for the APIs. This document attempts to complement it.
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
  - url: https://app-api.pixiv.net
paths:
  /auth/token:
    post:
      servers:
        - url: https://oauth2.secure.pixiv.net
      tags:
        - auth
      summary: Create a new authentication token
      description: |
        Do authentication, and obtain an access token and refresh token that can be used to access other APIs.
        There're a few grant types to do the authentication:  
        - `password`: Authenticate with username and password. Initially, a client should authenticate 
          with grant type `password` to obtain a access token and a refresh token. Then before the 
          access token expires, the client should use grant type `refresh_token` to get a new access 
          token.
        - `refresh_token`: Authenticate with a refresh token.
      operationId: getAuthToken
      requestBody:
        description: Authentication parameters
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthTokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthTokenCreate'
        required: true
      responses:
        200:
          description: Successfully get the tokens.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResult'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    AuthTokenCreate:
      required:
        - client_id
        - client_secret
        - grant_type
      type: object
      properties:
        get_secure_url:
          type: integer
          description: |
            This parameter is optional. It looks like the value doesn't have actual effect.
          example: 1
        client_id:
          type: string
          description: |
            ID of the client for OAuth authentication. Use `MOBrBDS8blbauoSck0ZfDbtuzpyT`
            to act as the mobile app.
          example: MOBrBDS8blbauoSck0ZfDbtuzpyT
        client_secret:
          type: string
          description: |
            Client secret for OAuth authentication. Use `lsACyCD94FhDUtGTXi3QzcFE2uU1hqtDaKeqrdwj`
            to act as the mobile app.
          example: lsACyCD94FhDUtGTXi3QzcFE2uU1hqtDaKeqrdwj
        grant_type:
          type: string
          description: |
            The way of authentication to use.  
          example: password
          enum:
          - password
          - refresh_token
        username:
          type: string
          description: |
            This property is required when the `grant_type` is `password`, and it specifies the username.
        password:
          type: string
          description: |
            This property is required when the `grant_type` is `password`, and it specifies the password.
        refresh_token:
          type: string
          description: |
            This property is required when the `grant_type` is `refresh_token`, and it specified the refresh
            token.
    AuthResult:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/AuthToken'
    AuthToken:
      type: object
      properties:
        access_token:
          type: string
          description: |
            The issued access token that can be used to access other APIs.
        expires_in: 
          type: integer
          description: |
            The number of seconds from now that the access token will expire.
        token_type:
          type: string
          example: "bearer"
        scope:
          type: string
          example: ""
        refresh_token:
          type: string
          description:
            The token that can be used to get a refreshed access token within expiry time without doing
            the authentication again.
        user:
          $ref: '#/components/schemas/User'
        device_token:
          type: string
    User:
      type: object
      properties:
        profile_image_urls: 
          type: object
          description: |
            User's profile image URLs.  
            If the user doesn't set a profile image, URLs to a default image will be used.
          properties:
            px_16x16:
              type: string
              format: uri
              description: URL to the user's profile image in 16x16 pixels.
            px_50x50:
              type: string
              format: uri
              description: URL to the user's profile image in 50x50 pixels.
            px_170x170:
              type: string
              format: uri
              description: URL to the user's profile image in 170x170 pixels.
        id: 
          type: string
          description:
            Internal numerical user ID.
          example: "123456789"
        name: 
          type: string
          description: |
            The name of the user.
        account: 
          type: string
          description: |
            The account name used for log in.
        mail_address:
          type: string
          example: "test@example.com"
          description: |
            Email address of the user.
        is_premium:
          type: boolean
          description: |
            Whether the user has bought the premimum subscription.
        x_restrict:
          type: integer
        is_mail_authorized:
          type: boolean
          description: |
            Whether the email of the user has been validated.
    Error:
      type: object
      properties:
        has_error:
          type: boolean
          example: true
        errors:
          type: object
          properties:
            system:
              type: object
              properties:
                message:
                  type: string
                  example: Invalid grant_type parameter or parameter missing
                code:
                  type: integer
                  example: 1508
          description: |
            Details of the error. The keys will be the category of the error.
